<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.tinymediamanager</groupId>
	<artifactId>tinyMediaManager</artifactId>
	<version>3.1.7</version>

	<name>tinyMediaManager</name>
	<description>a media management tool written in Java</description>
	<url>https://www.tinymediamanager.org/</url>
	<inceptionYear>2012</inceptionYear>
	<organization>
		<name>tinyMediaManager</name>
		<url>https://www.tinymediamanager.org</url>
	</organization>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>mlaggner</id>
			<name>Manuel Laggner</name>
			<email>manuel@tinymediamanager.org</email>
			<roles>
				<role>owner</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/Vienna</timezone>
		</developer>
		<developer>
			<id>myron</id>
			<name>Myron Boyle</name>
			<email>myron@tinymediamanager.org</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>Europe/Vienna</timezone>
			<properties>
				<picUrl>http://www.gravatar.com/avatar/c9f1f8250a29405f5cbbab246a025fb4</picUrl>
			</properties>
		</developer>
	</developers>

	<mailingLists>
		<mailingList>
			<name>Kodi-Forum</name>
			<post>http://forum.kodi.tv/forumdisplay.php?fid=204</post>
		</mailingList>
	</mailingLists>

	<prerequisites>
		<maven>3.2.5</maven>
	</prerequisites>

	<scm>
		<url>https://gitlab.com/tinyMediaManager/${project.artifactId}</url>
		<connection>scm:git:git@gitlab.com:tinyMediaManager/${project.artifactId}.git</connection>
		<developerConnection>scm:git:git@gitlab.com:tinyMediaManager/${project.artifactId}.git</developerConnection>
		<tag>tinyMediaManager-3.1.7</tag>
	</scm>
	<ciManagement>
		<system>GitLab CI</system>
		<url>https://gitlab.com/tinyMediaManager/${project.artifactId}/pipelines</url>
	</ciManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.outputEncoding>UTF-8</project.build.outputEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<skipTests>true</skipTests><!-- to override on command line -->

		<jar.version>3.2.0</jar.version>
		<surefire.version>3.0.0-M3</surefire.version>
		<compiler.version>3.8.1</compiler.version>
		<enforcer.version>3.0.0-M2</enforcer.version>
		<animal-sniffer.version>1.17</animal-sniffer.version>
		<wagon-webdav-jackrabbit.version>3.0.0</wagon-webdav-jackrabbit.version>
		<okhttp.version>3.12.1</okhttp.version>
		<slf4j.version>1.7.30</slf4j.version>
		<release.version>2.5.3</release.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.11.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.13</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>3.0.6</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.12.1</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.10.2</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-gson</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp-urlconnection</artifactId>
			<version>${okhttp.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
			<version>${okhttp.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.2</version>
		</dependency>

		<!-- J9 / J10 / J11 deps -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.7</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>fr.turri</groupId>
			<artifactId>aXMLRPC</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>com.uwetrottmann.tmdb2</groupId>
			<artifactId>tmdb-java</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.uwetrottmann.thetvdb-java</groupId>
			<artifactId>thetvdb-java</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.tinymediamanager</groupId>
			<artifactId>kodi-json-rpc</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.uwetrottmann.trakt5</groupId>
			<artifactId>trakt-java</artifactId>
			<version>6.4.0</version>
		</dependency>
		<dependency>
			<groupId>it.tidalwave.betterbeansbinding</groupId>
			<artifactId>betterbeansbinding-swingbinding</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.glazedlists</groupId>
			<artifactId>glazedlists</artifactId>
			<version>1.11.0</version>
		</dependency>
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna-platform</artifactId>
			<version>5.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.floreysoft</groupId>
			<artifactId>jmte</artifactId>
			<version>6.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout-swing</artifactId>
			<version>5.2</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2-mvstore</artifactId>
			<version>1.4.197</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jtidy</groupId>
			<artifactId>jtidy</artifactId>
			<version>r938</version>
		</dependency>
		<dependency>
			<groupId>com.github.stephenc.java-iso-tools</groupId>
			<artifactId>loop-fs-iso-impl</artifactId>
			<version>2.0.2-TMM-4</version>
			<exclusions>
				<exclusion>
					<!-- we use JCL-over-slf4j -->
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.stephenc.java-iso-tools</groupId>
			<artifactId>loop-fs-udf-impl</artifactId>
			<version>2.0.2-TMM-4</version>
			<exclusions>
				<exclusion>
					<!-- we use JCL-over-slf4j -->
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.nanohttpd</groupId>
			<artifactId>nanohttpd</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.fourthline.cling</groupId>
			<artifactId>cling-support</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.madgag</groupId>
			<artifactId>animated-gif-lib</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-jpeg</artifactId>
			<version>3.5</version>
		</dependency>
		<dependency>
			<groupId>org.mp4parser</groupId>
			<artifactId>muxer</artifactId>
			<version>1.9.39</version>
		</dependency>

		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-nfd</artifactId>
			<version>3.2.3</version>
		</dependency>

		<!-- for score testing -->
		<dependency>
			<groupId>info.debatty</groupId>
			<artifactId>java-string-similarity</artifactId>
			<version>1.1.0</version>
			<scope>test</scope>
		</dependency>

		<!-- for HTTP testing -->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>${okhttp.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/9945251/packages/maven</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/9945251/packages/maven</url>
		</repository>
		<snapshotRepository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/9945251/packages/maven</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<resources>
			<resource>
				<includes>
					<include>eclipse.properties</include>
				</includes>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<excludes>
					<exclude>eclipse.properties</exclude>
				</excludes>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${release.version}</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>false</useReleaseProfile>
						<releaseProfiles>release</releaseProfiles>
						<goals>deploy</goals>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<skip>${skipTests}</skip>
					<!-- spawn one jvm per test class per cpu core -->
					<!-- needed for static settings per test -->
					<parallel>classes</parallel>
					<forkCount>1C</forkCount>
					<threadCount>1</threadCount>
					<reuseForks>false</reuseForks>
					<includes>
						<include>**/*.java</include>
					</includes>
					<excludes>
						<exclude>**/IT*.java</exclude>
						<exclude>**/*IT.java</exclude>
						<exclude>**/*ITCase.java</exclude>
						<exclude>**/integrationtest/**/*.java</exclude>
						<exclude>**/integrationtests/**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${surefire.version}</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<skip>${skipTests}</skip>
					<includes>
						<include>**/IT*.java</include>
						<include>**/*IT.java</include>
						<include>**/*ITCase.java</include>
						<include>**/integrationtest/**/*.java</include>
						<include>**/integrationtests/**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin><!-- get SVN/GIT revision numbers -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>create</goal>
						</goals>
						<configuration>
							<shortRevisionLength>7</shortRevisionLength>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin><!-- generate a timestamp -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<name>timestamp</name>
							<pattern>yyyy-MM-dd HH:mm</pattern>
							<timeZone>GMT+1</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${jar.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>false</addClasspath>
							<classpathLayoutType>custom</classpathLayoutType>
							<customClasspathLayout>lib/${artifact.artifactId}.${artifact.extension}
							</customClasspathLayout>
							<mainClass>org.tinymediamanager.TinyMediaManager</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
						</manifest>
						<manifestEntries>
							<SplashScreen-Image>splashscreen.png</SplashScreen-Image>
							<Build-Nr>${buildNumber}</Build-Nr>
							<Build-Date>${timestamp}</Build-Date>
							<Build-By>${user.name}</Build-By>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<version>${animal-sniffer.version}</version>
				<configuration>
					<signature>
						<groupId>org.codehaus.mojo.signature</groupId>
						<artifactId>java18</artifactId>
						<version>1.0</version>
					</signature>
					<!-- ignoreDependencies>false</ignoreDependencies -->
				</configuration>
				<executions>
					<execution>
						<id>check-jdk-versions</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- copies our dependencies WITHOUT version number for packaging -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-tmm-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin><!-- call our ant file, since it's too complicated to do our packaging 
					solely in maven -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>dist</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<exportAntProperties>true</exportAntProperties>
					<target>
						<property name="tmmName" value="${project.artifactId}" />
						<property name="tmmVersion" value="${project.version}" />
						<property name="tmmRevision" value="${buildNumber}" />
						<property name="tmmTimestamp" value="${timestamp}" />

						<ant antfile="${project.basedir}/ant-package.xml">
							<target name="package-app" />
						</ant>
					</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${enforcer.version}</version>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.6.0.1398</version>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>${wagon-webdav-jackrabbit.version}</version>
			</extension>
		</extensions>
	</build>

	<profiles>
		<profile>
			<id>java9+</id>
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<properties>
				<maven.compiler.release>8</maven.compiler.release>
			</properties>
		</profile>
		<profile>
			<id>gitlab-ci</id>
			<build>
				<plugins>
					<!-- skip getting revision number on ci build -->
					<plugin><!-- get SVN/GIT revision numbers -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.12</version>
						<executions>
							<execution>
								<id>attach-dist</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>dist/tmm_${project.version}_win.zip</file>
											<type>zip</type>
											<classifier>win</classifier>
										</artifact>
										<artifact>
											<file>dist/tmm_${project.version}_mac.zip</file>
											<type>zip</type>
											<classifier>mac</classifier>
										</artifact>
										<artifact>
											<file>dist/tmm_${project.version}_linux.tar.gz</file>
											<type>tar.gz</type>
											<classifier>linux</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>net.nicoulaj.maven.plugins</groupId>
						<artifactId>checksum-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<goals>
									<goal>artifacts</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>qa</id>
			<build>
				<plugins>
					<plugin><!-- skip packaging on QA build -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>dist</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>de.thetaphi</groupId>
						<artifactId>forbiddenapis</artifactId>
						<version>2.6</version>
						<configuration>
							<!-- if the used Java version is too new, don't fail, just do nothing: -->
							<failOnUnsupportedJava>false</failOnUnsupportedJava>
							<failOnViolation>false</failOnViolation>
							<!-- more https://github.com/policeman-tools/forbidden-apis/wiki/BundledSignatures -->
							<bundledSignatures>
								<!-- This will automatically choose the right signatures based on 
									'maven.compiler.target': -->
								<bundledSignature>jdk-deprecated</bundledSignature>
								<bundledSignature>jdk-non-portable</bundledSignature>
								<bundledSignature>jdk-system-out</bundledSignature>
								<bundledSignature>jdk-internal</bundledSignature>
								<bundledSignature>jdk-reflection</bundledSignature>
								<bundledSignature>commons-io-unsafe-2.5</bundledSignature>
								<!-- bundledSignature>jdk-unsafe</bundledSignature -->
							</bundledSignatures>
							<signaturesFiles>
								<!-- use ours b/c of resourcebundle without locale -->
								<signaturesFile>src/test/resources/jdk-unsafe-tmm.txt</signaturesFile>
							</signaturesFiles>
						</configuration>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.gaul</groupId>
						<artifactId>modernizer-maven-plugin</artifactId>
						<version>1.7.1</version>
						<configuration>
							<failOnViolations>false</failOnViolations>
							<javaVersion>${maven.compiler.target}</javaVersion>
						</configuration>
						<executions>
							<execution>
								<id>modernizer</id>
								<phase>verify</phase>
								<goals>
									<goal>modernizer</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
